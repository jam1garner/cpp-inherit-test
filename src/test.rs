/* automatically generated by rust-bindgen */

#[repr(C)]
pub struct BaseType__bindgen_vtable(::std::os::raw::c_void);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct BaseType {
    pub vtable_: *const BaseType__bindgen_vtable,
    pub value: ::std::os::raw::c_int,
}
extern "C" {
    #[link_name = "\u{1}_ZN8BaseTypeC1Ei"]
    pub fn BaseType_BaseType(this: *mut BaseType, v: ::std::os::raw::c_int);
}
impl BaseType {
    #[inline]
    pub unsafe fn new(v: ::std::os::raw::c_int) -> Self {
        let mut __bindgen_tmp = ::std::mem::MaybeUninit::uninit();
        BaseType_BaseType(__bindgen_tmp.as_mut_ptr(), v);
        __bindgen_tmp.assume_init()
    }
}
extern "C" {
    #[link_name = "\u{1}_ZN8BaseType1xEv"]
    pub fn BaseType_x(this: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}_Z9call_x_onP8BaseType"]
    pub fn call_x_on(x: *mut BaseType) -> ::std::os::raw::c_int;
}
